const { io } = require('socket.io-client');

console.log('๐ฅ๏ธ ูุญุงูุงุฉ ุงูุชุทุจูู ุงูููุชุจู...');

const userId = '6850332a7f1d1ba42a526370';
const socket = io('http://localhost:5001');

socket.on('connect', () => {
    console.log('โ ูุชุตู ุจุงูุฎุงุฏู:', socket.id);
    
    // ุชุณุฌูู ุงูุชุทุจูู ุงูููุชุจู
    socket.emit('register-desktop-app', {
        userId: userId,
        userInfo: { 
            name: 'ุฃุญูุฏ ุชูุณูุฑ', 
            username: 'ahmedte' 
        }
    });
    
    console.log('๐ฑ ุชู ุชุณุฌูู ุงูุชุทุจูู ุงูููุชุจู ูููุณุชุฎุฏู:', userId);
});

socket.on('disconnect', () => {
    console.log('โ ุงููุทุน ุงูุงุชุตุงู');
});

socket.on('remote-command', (data) => {
    const { command, payload } = data;
    console.log('๐ก ุชู ุงุณุชูุงู ุฃูุฑ:', command, payload);
    
    // ูุญุงูุงุฉ ุชูููุฐ ุงูุฃูุฑ
    setTimeout(() => {
        socket.emit('desktop-app-response', {
            userId: userId,
            command: command,
            success: true,
            payload: { 
                message: `ุชู ุชูููุฐ ${command} ุจูุฌุงุญ`, 
                timestamp: new Date().toISOString() 
            }
        });
        console.log('โ ุชู ุฅุฑุณุงู ุชุฃููุฏ ุชูููุฐ ุงูุฃูุฑ');
    }, 1000);
});

socket.on('connect_error', (error) => {
    console.log('โ ุฎุทุฃ ูู ุงูุงุชุตุงู:', error.message);
});

console.log('๐ ุงูุชุทุจูู ุงูููุชุจู ูุนูู... ุงุถุบุท Ctrl+C ููุฅููุงู');

// ุฅุจูุงุก ุงูุชุทุจูู ูุนูู
process.on('SIGINT', () => {
    console.log('\n๐ ุฅููุงู ุงูุชุทุจูู ุงูููุชุจู...');
    socket.disconnect();
    process.exit(0);
}); 